// Generated by CoffeeScript 1.10.0
(function() {
  var tempData;

  tempData = null;

  window.onload = function() {
    var draw, formatDate, height, humidG, line, lineHumid, margin, params, parseDate, sensorNrEl, svg, tempG, width, x, xAxis, xhttp, yH, yHAxis, yT, yTAxis;
    xhttp = new XMLHttpRequest();
    params = "lorem=ipsum&name=binny";
    xhttp.onreadystatechange = function() {
      var data, dataArray;
      if (xhttp.readyState !== 4 || xhttp.status !== 200) {
        return;
      }
      data = JSON.parse(xhttp.responseText);
      dataArray = [[], []];
      data.forEach(function(v, i) {
        return dataArray[v.pos].push({
          temp: v.temp,
          humid: v.humid,
          date: parseDate(v.time.split('.')[0])
        });
      });
      tempData = dataArray;
      return draw(dataArray[1]);
    };
    xhttp.open('POST', 'data', true);
    xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    xhttp.send(params);
    margin = {
      top: 20,
      right: 20,
      bottom: 70,
      left: 40
    };
    width = window.innerWidth - margin.left - margin.right;
    height = (window.innerHeight / 2) - margin.top - margin.bottom;
    sensorNrEl = document.getElementById('sensorNr');
    sensorNrEl.addEventListener('click', function(e) {
      console.log(tempData);
      return draw(tempData[e.target.value]);
    });
    formatDate = d3.time.format('%d-%b-%y');
    parseDate = d3.time.format('%Y-%m-%dT%H:%M:%S').parse;
    x = d3.time.scale().range([0, width]);
    yT = d3.scale.linear().range([height, 0]);
    yH = d3.scale.linear().range([height * 2, height]);
    xAxis = d3.svg.axis().scale(x).orient('bottom');
    yTAxis = d3.svg.axis().scale(yT).orient('left');
    yHAxis = d3.svg.axis().scale(yH).orient('left');
    line = d3.svg.line().x(function(d) {
      return x(d.date);
    }).y(function(d) {
      return yT(d.temp);
    });
    lineHumid = d3.svg.line().x(function(d) {
      return x(d.date);
    }).y(function(d) {
      return yH(d.humid);
    });
    svg = d3.select('body').append('svg').attr('width', width + margin.left + margin.right).attr('height', height * 2 + margin.top + margin.bottom);
    tempG = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
    humidG = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top * 2 + ')');
    return draw = function(data) {
      x.domain(d3.extent(data, function(d) {
        return d.date;
      }));
      yT.domain(d3.extent(data, function(d) {
        return d.temp;
      }));
      yH.domain(d3.extent(data, function(d) {
        return d.humid;
      }));
      tempG.append('g').attr('class', 'x axis').attr('transform', 'translate(0,' + height + ')').call(xAxis);
      tempG.append('g').attr('class', 'y axis').call(yTAxis).append('text').attr('transform', 'rotate(-90)').attr('y', 6).attr('dy', '.71em').style('text-anchor', 'end').text('Price ($)');
      tempG.append('path').datum(data).attr('class', 'lineA').attr('d', line);
      humidG.append('g').attr('class', 'y axis').call(yHAxis).append('text').attr('transform', 'rotate(-90)').attr('y', height).attr('dy', '.71em').style('text-anchor', 'end');
      return humidG.append('path').datum(data).attr('class', 'lineB').attr('d', lineHumid);
    };
  };

}).call(this);
